{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bmontibeler\\\\Documents\\\\GitHub\\\\MonoXmas\\\\react-snake-finished\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport { CANVAS_SIZE, SNAKE_START, APPLE_START, SCALE, SPEED, DIRECTIONS } from \"./constants\";\nimport \"./css/style.css\";\nimport GameOverModal from \"./GameOverModal\"; // import '@fortawesome/fontawesome-free/css/all.css';\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [currentDirection, setCurrentDirection] = useState(38);\n  useInterval(() => gameLoop(), speed);\n\n  const endGame = () => {\n    setSpeed(null);\n    setGameOver(true);\n  };\n\n  const moveSnake = ({\n    keyCode\n  }) => {\n    if (!(keyCode >= 37 && keyCode <= 40)) {\n      return;\n    }\n\n    if (currentDirection === 37) {\n      if (keyCode === currentDirection + 2) {\n        return;\n      }\n    }\n\n    if (currentDirection === 38) {\n      if (keyCode === currentDirection + 2) {\n        return;\n      }\n    }\n\n    if (currentDirection === 39) {\n      if (keyCode === currentDirection - 2) {\n        return;\n      }\n    }\n\n    if (currentDirection === 40) {\n      if (keyCode === currentDirection - 2) {\n        return;\n      }\n    }\n\n    setCurrentDirection(keyCode);\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n  };\n\n  const createApple = () => apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\n  const checkCollision = (piece, snk = snake) => {\n    if (piece[0] * SCALE >= CANVAS_SIZE[0] || piece[0] < 0 || piece[1] * SCALE >= CANVAS_SIZE[1] || piece[1] < 0) return true;\n\n    for (const segment of snk) {\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return true;\n    }\n\n    return false;\n  };\n\n  const checkAppleCollision = newSnake => {\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = createApple();\n\n      while (checkCollision(newApple, newSnake)) {\n        newApple = createApple();\n      }\n\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  };\n\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n\n    if (checkAppleCollision(snakeCopy)) {\n      setScore(prevScore => prevScore + 1);\n      let newApple = createApple();\n\n      while (checkCollision(newApple, snakeCopy)) {\n        newApple = createApple();\n      }\n\n      setApple(newApple);\n    } else {\n      snakeCopy.pop();\n    }\n\n    setSnake(snakeCopy);\n  };\n\n  const startGame = () => {\n    setSnake(SNAKE_START);\n    setApple(APPLE_START);\n    setDir([0, -1]);\n    setSpeed(SPEED);\n    setGameOver(false);\n    setScore(0);\n    canvasRef.current.focus();\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight); // Draw snake head\n\n    const [headX, headY] = snake[0];\n    const headImg = new Image();\n    headImg.src = \"/icons/santaClaus.png\";\n    context.drawImage(headImg, headX, headY, 1, 1); // Draw snake body\n\n    const bodyImg = new Image();\n    bodyImg.src = \"/icons/gift.svg\";\n    snake.slice(1).forEach(([x, y]) => context.drawImage(bodyImg, x, y, 1, 1)); // Draw apple\n\n    const [appleX, appleY] = apple;\n    const appleImg = new Image();\n    appleImg.src = \"/icons/gift.svg\";\n    context.drawImage(appleImg, appleX, appleY, 1, 1);\n  }, [snake, apple, gameOver]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: '#ffffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Mono Christmas game\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"game-canvas\",\n    ref: canvasRef,\n    width: `${CANVAS_SIZE[0]}px`,\n    height: `${CANVAS_SIZE[1]}px`,\n    tabIndex: \"0\",\n    style: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--up\",\n    onClick: () => moveSnake({\n      keyCode: 38\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--right\",\n    onClick: () => moveSnake({\n      keyCode: 39\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--down\",\n    onClick: () => moveSnake({\n      keyCode: 40\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn--left\",\n    onClick: () => moveSnake({\n      keyCode: 37\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"Score: \", score), gameOver && /*#__PURE__*/React.createElement(GameOverModal, {\n    score: score,\n    startGame: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn--primary\",\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Start Game\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bmontibeler/Documents/GitHub/MonoXmas/react-snake-finished/src/App.js"],"names":["React","useState","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","GameOverModal","App","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","score","setScore","currentDirection","setCurrentDirection","gameLoop","endGame","moveSnake","keyCode","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","checkAppleCollision","newSnake","newApple","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","prevScore","pop","startGame","current","focus","context","getContext","setTransform","clearRect","window","innerWidth","innerHeight","headX","headY","headImg","Image","src","drawImage","bodyImg","slice","forEach","x","y","appleX","appleY","appleImg","e","display","flexDirection","alignItems","justifyContent","color","outline"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useInterval } from \"./useInterval\";\r\nimport {\r\n  CANVAS_SIZE,\r\n  SNAKE_START,\r\n  APPLE_START,\r\n  SCALE,\r\n  SPEED,\r\n  DIRECTIONS\r\n} from \"./constants\";\r\nimport \"./css/style.css\";\r\nimport GameOverModal from \"./GameOverModal\";\r\n// import '@fortawesome/fontawesome-free/css/all.css';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const canvasRef = useRef();\r\n  const [snake, setSnake] = useState(SNAKE_START);\r\n  const [apple, setApple] = useState(APPLE_START);\r\n  const [dir, setDir] = useState([0, -1]);\r\n  const [speed, setSpeed] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [currentDirection, setCurrentDirection] = useState(38);\r\n\r\n  useInterval(() => gameLoop(), speed);\r\n\r\n  const endGame = () => {\r\n    setSpeed(null);\r\n    setGameOver(true);\r\n  };\r\n\r\n  const moveSnake = ({ keyCode }) => {\r\n    if(!(keyCode >= 37 && keyCode <= 40)) {\r\n      return;\r\n    }\r\n    if(currentDirection === 37 ) {\r\n      if(keyCode === currentDirection+2) {\r\n        return; \r\n      } \r\n    }\r\n    if(currentDirection === 38 ) {\r\n      if(keyCode === currentDirection+2) {\r\n        return; \r\n      } \r\n    }\r\n    if(currentDirection === 39) {\r\n      if(keyCode === currentDirection-2) {\r\n        return;\r\n      } \r\n    }\r\n    if(currentDirection === 40) {\r\n      if(keyCode === currentDirection-2) {\r\n        return;\r\n      } \r\n    }\r\n    setCurrentDirection(keyCode);\r\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\r\n  }\r\n\r\n  const createApple = () =>\r\n    apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\r\n\r\n  const checkCollision = (piece, snk = snake) => {\r\n    if (\r\n      piece[0] * SCALE >= CANVAS_SIZE[0] ||\r\n      piece[0] < 0 ||\r\n      piece[1] * SCALE >= CANVAS_SIZE[1] ||\r\n      piece[1] < 0\r\n    )\r\n      return true;\r\n\r\n    for (const segment of snk) {\r\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const checkAppleCollision = newSnake => {\r\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\r\n      let newApple = createApple();\r\n      while (checkCollision(newApple, newSnake)) {\r\n        newApple = createApple();\r\n      }\r\n      setApple(newApple);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const gameLoop = () => {\r\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\r\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\r\n    snakeCopy.unshift(newSnakeHead);\r\n    if (checkCollision(newSnakeHead)) endGame();\r\n    if (checkAppleCollision(snakeCopy)) {\r\n      setScore(prevScore => prevScore + 1);\r\n      let newApple = createApple();\r\n      while (checkCollision(newApple, snakeCopy)) {\r\n        newApple = createApple();\r\n      }\r\n      setApple(newApple);\r\n    } else {\r\n      snakeCopy.pop();\r\n    }\r\n    setSnake(snakeCopy);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setSnake(SNAKE_START);\r\n    setApple(APPLE_START);\r\n    setDir([0, -1]);\r\n    setSpeed(SPEED);\r\n    setGameOver(false);\r\n    setScore(0);\r\n    canvasRef.current.focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\r\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    // Draw snake head\r\n    const [headX, headY] = snake[0];\r\n    const headImg = new Image();\r\n    headImg.src = \"/icons/santaClaus.png\";\r\n    context.drawImage(headImg, headX, headY, 1, 1);\r\n\r\n    // Draw snake body\r\n    const bodyImg = new Image();\r\n    bodyImg.src = \"/icons/gift.svg\";\r\n    snake.slice(1).forEach(([x, y]) => context.drawImage(bodyImg, x, y, 1, 1));\r\n\r\n    // Draw apple\r\n    const [appleX, appleY] = apple;\r\n    const appleImg = new Image();\r\n    appleImg.src = \"/icons/gift.svg\";\r\n    context.drawImage(appleImg, appleX, appleY, 1, 1);\r\n  }, [snake, apple, gameOver]);\r\n\r\n  return (\r\n    <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)}\r\n    style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\",\r\n    }}>\r\n      <h1 style={{ color: '#ffffff' }}>Mono Christmas game</h1>\r\n      <canvas\r\n        className=\"game-canvas\"\r\n        ref={canvasRef}\r\n        width={`${CANVAS_SIZE[0]}px`}\r\n        height={`${CANVAS_SIZE[1]}px`}\r\n        tabIndex=\"0\"\r\n        style={{ outline: 'none' }}\r\n      />\r\n      <div className=\"c-btn\">\r\n        <button className=\"btn btn--up\" onClick={() => moveSnake({ keyCode: 38 })}>\r\n          <i className=\"fa fa-arrow-up\"></i>\r\n        </button>\r\n        <button className=\"btn btn--right\" onClick={() => moveSnake({ keyCode: 39 })}>\r\n          <i className=\"fa fa-arrow-right\"></i>\r\n        </button>\r\n        <button className=\"btn btn--down\" onClick={() => moveSnake({ keyCode: 40 })}>\r\n          <i className=\"fa fa-arrow-down\"></i>\r\n        </button>\r\n        <button className=\"btn btn--left\" onClick={() => moveSnake({ keyCode: 37 })}>\r\n        <i className=\"fa fa-arrow-left\"></i>\r\n        </button>\r\n      </div>\r\n      <div>Score: {score}</div>\r\n      {gameOver && <GameOverModal score={score} startGame={startGame} />}\r\n      <button className=\"btn--primary\" onClick={startGame}>Start Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}